
profiling one liner
-------------------
gcc  -o ida_search_via_graph rubikscubennnsolver/ida_search_core.c rubikscubennnsolver/ida_search_via_graph.c -lm -pg; rm prof_output gmon.out; ./ida_search_via_graph --prune-table-0-filename lookup-tables/lookup-table-5x5x5-step11-LR-centers-stage-t-center-only.bin --prune-table-0-state 218536 --prune-table-1-filename lookup-tables/lookup-table-5x5x5-step12-LR-centers-stage-x-center-only.bin --prune-table-1-state 86325 --centers-only --solution-count 10 --legal-moves "U,U',U2,Uw,Uw',Uw2,L,L',L2,Lw,Lw',Lw2,F,F',F2,Fw,Fw',Fw2,R,R',R2,Rw,Rw',Rw2,B,B',B2,Bw,Bw',Bw2,D,D',D2,Dw,Dw',Dw2"; gprof ida_search_via_graph gmon.out > prof_output; head -n 20 prof_output


TODO section
------------
- 555 the step 901 table could probably be split...the move depth average is only 5

- 444 ida_heuristic_reduce_333_444 finding solutions that have PLL waste a TON of time
  if we know the starting parity for corners and edges can we somehow use that speed things up?
  I think edge parity always starts out as even

- 666 phase6 (the step61, 62 and 63 tables) could be sped up a good bit with a perfect hash table, it would only be 24M
./ida_search_via_graph --prune-table-0-filename lookup-tables/lookup-table-6x6x6-step61-LR-solve-inner-x-center-and-oblique-edges.bin --prune-table-0-state 168548 --prune-table-1-filename lookup-tables/lookup-table-6x6x6-step62-FB-solve-inner-x-center-and-oblique-edges.bin --prune-table-1-state 69108 --prune-table-2-filename lookup-tables/lookup-table-6x6x6-step63-UD-oblique-edges.bin --prune-table-2-state 13 --centers-only --legal-moves "U,U',U2,Uw2,3Uw2,L,L',L2,Lw2,F,F',F2,Fw2,R,R',R2,Rw2,B,B',B2,Bw2,D,D',D2,Dw2,3Dw2"

- use threads for ida_search_via_graph.c? This might be more trouble than it is worth given that
  we are bound by reading from memory.

- move to f-strings
https://stackoverflow.com/questions/56877053/is-there-a-tool-to-automatically-convert-string-formatting-types-to-f-strings

- type hints everywhere

- sphinx docs?

- upload all new .bin files

- add md5sum for all .bin files to force download

- investigate all heuristic tables...do we still need them?


555 combine phase1+2..attempt #432
==================================

./ida_search_via_graph \
    --prune-table-0-filename lookup-tables/lookup-table-5x5x5-step11-LR-centers-stage-t-center-only.bin --prune-table-0-state 218536 \
    --prune-table-1-filename lookup-tables/lookup-table-5x5x5-step12-LR-centers-stage-x-center-only.bin --prune-table-1-state 86325 \
    --prune-table-2-filename lookup-tables/lookup-table-5x5x5-step17-UD-centers-stage-t-center-only.bin --prune-table-2-state 594026 \
    --prune-table-3-filename lookup-tables/lookup-table-5x5x5-step18-UD-centers-stage-x-center-only.bin --prune-table-3-state 484064 \
    --centers-only --legal-moves "U,U',U2,Uw,Uw',Uw2,L,L',L2,Lw,Lw',Lw2,F,F',F2,Fw,Fw',Fw2,R,R',R2,Rw,Rw',Rw2,B,B',B2,Bw,Bw',Bw2,D,D',D2,Dw,Dw',Dw2" --type 5x5x5-centers-stage

[2021-09-08T16:48:30.193] IDA threshold 9, explored 321 nodes, took 0.000s, 0 nodes-per-sec
[2021-09-08T16:48:30.193] IDA threshold 10, explored 9,078 nodes, took 0.000s, 0 nodes-per-sec
[2021-09-08T16:48:30.201] IDA threshold 11, explored 183,306 nodes, took 0.007s, 26,186,572 nodes-per-sec
[2021-09-08T16:48:30.386] IDA threshold 12, explored 4,560,597 nodes, took 0.185s, 24,651,876 nodes-per-sec
[2021-09-08T16:48:34.470] IDA threshold 13, explored 120,650,823 nodes, took 4.083s, 29,549,552 nodes-per-sec
[2021-09-08T16:50:31.441] IDA threshold 14, explored 3,270,726,204 nodes, took 116.972s, 27,961,616 nodes-per-sec

tis growing at 29x per depth so....
  step 15 should take just under 1 hour
  step 16 should take ~29 hours