
DONE - do NoIDASolution stuff for 777

DONE - go ahead and do the rest of the 777 solver even though centers are not done yet

DONE - Even cubes...we need to prevent OLL when we figure out that we will hit it later

DONE - Avoid PLL parity for 6x6x6...not 100% sure how to do this.  Maybe only look for
       it when pairing the outer orbit of edges.

- build lookup-table-5x5x5-step20-LR-centers-stage.txt out all the way (165 million entries)

- pair_one_edge_555() is broken if you don't pair all of the outside edges first via 444

- 4x4x4-edges and 5x5x5-edges. We need to see what "cycles" of edges there are and for
the edges that are not part of the cycle x them out as if they were paired and then do
the lookup. Say for instance in a 444 there are only two edges at play, that solution
is for sure in the table but we have to x out all of the other edges in order for us to
find it.

How to do this?

Brute force...worst case say there are 12 unpaired edges, we need to try Xing out every
combination with 1 edge, then 2 edges, then 3 edges, etc all the way up to Xing out 11 edges.

    foo = ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l')

    total_count = 0
    for x in range(1, 12):
        combos = itertools.combinations(foo, x)
        count = 0
        for combo in combos:
            count += 1
        total_count += count
        print("With %d edges there are %d combos" % (x, count))
    print("%d total combos" % total_count)

Tells us
    With 1 edges there are 12 combos
    With 2 edges there are 66 combos
    With 3 edges there are 220 combos
    With 4 edges there are 495 combos
    With 5 edges there are 792 combos
    With 6 edges there are 924 combos
    With 7 edges there are 792 combos
    With 8 edges there are 495 combos
    With 9 edges there are 220 combos
    With 10 edges there are 66 combos
    With 11 edges there are 12 combos
    4094 total combos

Looking up 4094 at one time wouldn't be that bad. If we get multiple hits we need to keep the
one that pairs the most edges...that should be the entry where we Xed out the fewest edges.
